// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// run_markov_profile
List run_markov_profile(List X, int nLevels, int maxLength);
RcppExport SEXP _ordinalEditDistance_run_markov_profile(SEXP XSEXP, SEXP nLevelsSEXP, SEXP maxLengthSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type X(XSEXP);
    Rcpp::traits::input_parameter< int >::type nLevels(nLevelsSEXP);
    Rcpp::traits::input_parameter< int >::type maxLength(maxLengthSEXP);
    rcpp_result_gen = Rcpp::wrap(run_markov_profile(X, nLevels, maxLength));
    return rcpp_result_gen;
END_RCPP
}
// run_ordinalEditDistance
NumericMatrix run_ordinalEditDistance(List X, double appendCost, double incrementCost, double incrementPower);
RcppExport SEXP _ordinalEditDistance_run_ordinalEditDistance(SEXP XSEXP, SEXP appendCostSEXP, SEXP incrementCostSEXP, SEXP incrementPowerSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type X(XSEXP);
    Rcpp::traits::input_parameter< double >::type appendCost(appendCostSEXP);
    Rcpp::traits::input_parameter< double >::type incrementCost(incrementCostSEXP);
    Rcpp::traits::input_parameter< double >::type incrementPower(incrementPowerSEXP);
    rcpp_result_gen = Rcpp::wrap(run_ordinalEditDistance(X, appendCost, incrementCost, incrementPower));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_ordinalEditDistance_run_markov_profile", (DL_FUNC) &_ordinalEditDistance_run_markov_profile, 3},
    {"_ordinalEditDistance_run_ordinalEditDistance", (DL_FUNC) &_ordinalEditDistance_run_ordinalEditDistance, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_ordinalEditDistance(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
